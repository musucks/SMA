SMA 4
#: Develop Content based social media analytics model for business. 

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.decomposition import LatentDirichletAllocation
import matplotlib.pyplot as plt

# Sample Data
texts = ["This is the first document.", "The Document is pathetic.", "This document is really nice", "Is this the first document?"]


# Vectorize the text
vectorizer = CountVectorizer(stop_words='english')	
X = vectorizer.fit_transform(texts)

# Topic Modeling with LDA
lda = LatentDirichletAllocation(n_components=2, random_state=42)
lda.fit(X)

# Display topics
def display_topics(model, feature_names, no_top_words):
    for topic_idx, topic in enumerate(model.components_):
        print(f"Topic {topic_idx}:")
        print(" ".join([feature_names[i] for i in topic.argsort()[:-no_top_words - 1:-1]]))

display_topics(lda, vectorizer.get_feature_names_out(), 3)

# Trend Analysis with TF-IDF
tfidf_vectorizer = TfidfVectorizer(stop_words='english')
tfidf = tfidf_vectorizer.fit_transform(texts)
df = pd.DataFrame(tfidf.toarray(), columns=tfidf_vectorizer.get_feature_names_out())
print(df)

from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
analyzer = SentimentIntensityAnalyzer()

# Analyze sentiments
sentiments = [analyzer.polarity_scores(text) for text in texts]
sentiment_df = pd.DataFrame(sentiments)
print(sentiment_df)
