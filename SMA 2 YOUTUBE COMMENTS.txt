SMA 2 
#YOUTUBE COMMENTS

import pandas as pd
import requests
from textblob import TextBlob
import json

# Set YouTube video ID, maximum number of comments to retrieve, and API key
video_id = "Q33TkQKlIMg"
max_result = 100
api_key ="AIzaSyC_4xZTiNuz1O-Qu5kYnlg82riP30KRIxY"
video_info_url = f"https://www.googleapis.com/youtube/v3/videos?part=id%2C+snippet&id=Q33TkQKlIMg&key={api_key}"
video_info_response = requests.get(video_info_url)
video_info_data = video_info_response.json()
print(json.dumps(video_info_data, indent=4))

comments_url = f"https://www.googleapis.com/youtube/v3/commentThreads?key={api_key}&videoId={video_id}&part=snippet&maxResults={max_result}"
comments_response = requests.get(comments_url)
comments_data = comments_response.json()
print(json.dumps(comments_data, indent=4))

df = pd.DataFrame(comments_data['items'])
df1 = pd.DataFrame(df['snippet'])
txt=""
comments = []
for i in range(0,max_result):
    df2 = pd.DataFrame(df['snippet'][i])
    txt = df2['topLevelComment']['snippet']['textOriginal']
    comments.append(txt)
print(comments)
def get_comment_sentiment(comment):
    analysis = TextBlob(comment)
    if analysis.sentiment.polarity > 0:
        return "Positive"
    elif analysis.sentiment.polarity == 0:
        return "neutral"
    else:
        return "negative"
        
comment_list = []
sentiment_list = []
for comment in comments:
    sentiment = get_comment_sentiment(comment)
    comment_list.append(comment)
    sentiment_list.append(sentiment)
sentiment_df = pd.DataFrame({"Comments": comment_list, "Sentiment": sentiment_list})
sentiment_df

sentiment_df.to_csv("Youtube_Comments_Sentiment_Analysis.csv")

